version: 2.1

# -------------------------
#        ORBS
# -------------------------
orbs:
  nx: nrwl/nx@1.2.0

# -------------------------
#        DEFAULTS
# -------------------------
machine:
  pre:
    - mkdir ~/.cache

dependencies:
  cache_directories:
    - ~/.cache
  override:
    - yarn install

defaults: &defaults
  working_directory: ~/repo

# -------------------------
#        EXECUTORS
# -------------------------
executors:
  linux:
    <<: *defaults
    docker:
      - image: cimg/node:lts-browsers
    resource_class: medium

# -------------------------
#        COMMANDS
# -------------------------
commands:
  setup:
    parameters:
      os:
        type: string
        default: linux
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - monorepo-tools/yarn-packages/<< parameters.os >>/{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --prefer-offline --frozen-lockfile --non-interactive --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: monorepo-tools/yarn-packages/<< parameters.os >>/{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache

# -------------------------
#          JOBS
# -------------------------
jobs:
  # -------------------------
  #     JOBS: Agent
  # -------------------------
  agent:
    parameters:
      os:
        type: string
        default: 'linux'
    executor: << parameters.os >>
    environment:
      NX_E2E_CI_CACHE_KEY: e2e-circleci-<< parameters.os >>
      NX_E2E_RUN_CYPRESS: 'false'
      NX_VERBOSE_LOGGING: 'false'
    steps:
      - run:
          name: Set dynamic nx run variable
          command: |
            echo "export NX_RUN_GROUP=\"run-group-<< parameters.os >>-$CIRCLE_WORKFLOW_ID\";" >> $BASH_ENV
      - setup:
          os: << parameters.os >>
      - run:
          name: Agent
          command: npx nx-cloud start-agent
          no_output_timeout: 60m

  # -------------------------
  #     JOBS: Main Linux
  # -------------------------
  main-linux:
    executor: linux
    environment:
      NX_CLOUD_DISTRIBUTED_EXECUTION: 'true'
      NX_E2E_CI_CACHE_KEY: e2e-circleci-linux
      NX_VERBOSE_LOGGING: 'false'
    steps:
      - run:
          name: Set dynamic nx run variable
          command: |
            echo "export NX_RUN_GROUP=\"run-group-linux-$CIRCLE_WORKFLOW_ID\";" >> $BASH_ENV
      - setup:
          os: linux
      - nx/set-shas:
          main-branch-name: 'main'
      - run: yarn nx format:check --base=$NX_BASE --head=$NX_HEAD
      - run:
          name: Run Lint/Test/Build
          command: |
            pids=()
            yarn nx affected --target=lint --base=$NX_BASE --head=$NX_HEAD --parallel=2 &
            pids+=($!)
            yarn nx affected --target=test --base=$NX_BASE --head=$NX_HEAD --parallel=1 &
            pids+=($!)
            yarn nx affected --target=build --base=$NX_BASE --head=$NX_HEAD --parallel=2 &
            pids+=($!)
            for pid in "${pids[@]}"; do
              wait "$pid"
            done
      - run:
          name: Run E2E Tests
          command: |
            npx nx affected --target=e2e --base=$NX_BASE --head=$NX_HEAD --parallel=1
          no_output_timeout: 25m
      - run:
          name: Stop All Running Agents for This CI Run
          command: npx nx-cloud stop-all-agents

# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  version: 2

  build:
    jobs:
      - agent:
          name: 'agent1'
      - agent:
          name: 'agent2'
      - main-linux
